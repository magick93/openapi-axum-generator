use axum::{
    routing::{get, post, put, delete},
    Router,
};
use serde::{Deserialize, Serialize};
use std::net::SocketAddr;

#[derive(Serialize, Deserialize)]
struct ErrorResponse {
    message: String,
}

#[tokio::main]
async fn main() {
    let app = Router::new()
        {% for route in routes %}
        .route("{{ route.path }}", {{ route.method }}({{ route.handler }}))
        {% endfor %};

    let addr = SocketAddr::from(([127, 0, 0, 1], 3000));
    println!("Listening on {}", addr);
    axum::Server::bind(&addr)
        .serve(app.into_make_service())
        .await
        .unwrap();
}
